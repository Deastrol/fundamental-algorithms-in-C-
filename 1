#include <iostream>
#include <cmath>
#include <string>
#include <vector>


using namespace std;

bool amount_is_zero(vector<int> posit, vector<int> negat, vector<int> null) {
    if (!posit.empty() && !negat.empty()) {

        int sum_posit_negat = 0;
        while (!posit.empty() && !negat.empty()) {      //делаем до тех пор, пока в posit и negat есть числа
            sum_posit_negat += posit.back() + negat.back();

            posit.pop_back();
            negat.pop_back();
        }
        //но все ли числа мы использовали в обоих массивах
        while (!posit.empty()) {        //в posit что-то осталось, но в sum_posit_negat значение < 0, то  можем добавить значения массива в sum_posit_negat
            if (sum_posit_negat < 0) {
                sum_posit_negat += posit.back();
                posit.pop_back();
            }
            else
                return 0;
        }

        while (!negat.empty()) {
            if (sum_posit_negat > 0) {
                sum_posit_negat += negat.back();
                negat.pop_back();
            }
            else
                return 0;
        }

        return sum_posit_negat == 0;


    }
    else if (!null.empty() && posit.empty() && negat.empty()) {
        return null.back() == 0;
    }
    else
        return 0;
}
void completion_vect(string str, int pos, vector<int>& posit, vector<int>& negat, vector<int>& null) {
    while (str.find(' ') != -1) {
        pos = str.find(' ');
        string substring = str.substr(0, pos);  //передали строку от 0 до пробела(но без него)
        if (stoi(substring) > 0)
            posit.push_back(stoi(substring));      //получаем положительное число и добавляем в вектор интовое значение 
        else if (stoi(substring) < 0) {
            negat.push_back(stoi(substring));      //получаем отрицательное число и добавляем в вектор интовое значение 

        }
        else if (stoi(substring) == 0 && null.empty()) { //достаточно добавить один 0
            null.push_back(stoi(substring));
        }

        str.erase(0, pos + 1);

    }
    //последний символ в строке
    if (!str.empty()) {
        if (stoi(str) > 0)
            posit.push_back(stoi(str));
        else if (stoi(str) < 0) {
            negat.push_back(stoi(str));

        }
        else if (stoi(str) == 0 && null.empty()) { //достаточно добавить один 0
            null.push_back(stoi(str));

        }
    }

}



int main() {
    setlocale(LC_ALL, "RUS");

    /* 1.Сумма чисел равна нулю.Here we go again
    Написать функцию, принимающую на вход набор из чисел типа int, которая при всех значениях входных параметров корректно определяет, 
    что сумма всех чисел промежутка равна 0. Разрешается использовать только целочисленную арифметику типа int
    */
    int position = 0;
    string str;
    vector<int> positive, negative, null;

    getline(cin, str);
    completion_vect(str, position, positive, negative, null);

    if (amount_is_zero(positive, negative, null)) {
        cout << "The amount is zero" << endl;
    }
    else
        cout << "The amount is not zero" << endl;



    return 0;
}
